安装完成后，还需要最后一步设置，在命令行输入：
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"


创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：
$ mkdir learngit		（创建文件夹，不能为中文）
$ cd learngit			（进入文件夹）
$ pwd				（显示当前目录）
/Users/michael/learngit


第二步，通过git init命令把这个目录变成Git可以管理的仓库：
$ git init			（把当前目录变成git仓库，要先进入这个目录）
Initialized empty Git repository in /Users/michael/learngit/.git/
$ ls -an			（查看文件夹中文件，包括隐藏文件）

$ git add readme.txt		（把文件添加到仓库，是先把文件放到仓库目录中）

$ git commit -m "wrote a readme file"	（把文件提交到仓库）
	     -m "这里是备注"		（加上-m是本次提交的说明）

$ git add file.txt file2.txt	（添加两个文件用空格分隔）
$ git commit -m "add 2 file"

$ git add *.py			（大量提交文件）
$ git status			（查看）
$ git reset HEAD 1.py		（排除一个文件）

$ git status			（可以让我们时刻掌握仓库当前的状态，在把文件添加、修改后使用查看）
$ git diff			（查看文件差异，修改了什么）
$ git log			（显示从最近到最远的提交日志）
	  --pretty=oneline	（可以看到commit id版本号）

$ git reset --hard HEAD^	（回退所用内容到上一个版本，用HEAD表示当前版本就是最新的提交，上一个版本就是HEAD^，上上一个版本就是HEAD^^
）
$ git reset --hard 3628164	（回退到某个版本，需要版本号）

$ git reflog			（记录每一次命令）

$ git checkout -- readme.tx	（丢弃工作区的修改）总之，就是让这个文件回到最近一次git commit或git add时的状态。
$ git reset HEAD readme.txt	（把暂存区的修改撤销掉）

$ rm test.txt			（删除文件，linux命令，或者进入目录右键删除）
$ git rm test.txt		（从版本库中删除该文件）


工作区	比如：learngit文件夹
暂存区	add后
版本区	.git（本地）
master	分支


/* 远程仓库GitHub */

添加远程库
http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013752340242354807e192f02a44359908df8a5643103a000

一个上传流程
$ git add file.txt
$ commit -m "file.txt"		（先本地版本库）
$ push origin master		（远程版本库）

从远程库克隆
$ git clone git@github.com:michaelliao/gitskills.git		（git clone克隆一个本地库，把Git库的地址换成你自己的，默认的git://使用ssh
）
	    git clone git://github.com:username/xxxx.git	（或者这个？）
	    https://github.com/michaelliao/gitskills.git	（也可以使用https）


创建与合并分支


















