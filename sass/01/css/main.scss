@charset "UTF-8";

//sass的变量必须是$开头
$font-stack: Helvetica, sans-serif;
$primary-color: #333;

//默认变量在值后面加上!default
$baseLineHeight:1.5 !default;

body {
  font: 100% $font-stack;
  color: $primary-color;
}

ul{
  list-style: none;
  li{
    height:30px;
  }
  a{
    color:#66c00f;
  }
}

//嵌套-选择器嵌套
nav {
  a {
    color: red;

    div & {
      color:green;
    }
  }
}

//嵌套-属性嵌套
.box {
  font: {
    size: 12px;
    weight: bold;
  }
}

//嵌套-伪类嵌套
a{
  color:#66c00f;
  &:hover{
    color:#ff0000;
  }
}

//混合宏-声明混合宏使用“@mixin”来声明
//use @include border-radius(); 要写在宏之后
@mixin border-radius{
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
//带参数混合宏：
@mixin border-radius($radius:5px){
  -webkit-border-radius: $radius;
  border-radius: $radius;
}
div{
  @include border-radius();
}
//复杂的混合宏：有多个参数，这个时候可以使用“ … ”来替代
@mixin prefixer(){

}
@mixin box-shadow($shadow...) {
  @if length($shadow) >= 1 {
    @include prefixer(box-shadow, $shadow);
  } @else{
    $shadow:0 0 4px rgba(0,0,0,.3);
    @include prefixer(box-shadow, $shadow);
  }
}

//混合宏-调用混合宏
button {
  @include border-radius;         //不带值时不需要括号
  @include border-radius(10px);   //带值
}

//混合宏的参数--传多个参数
@mixin center($width,$height){
  width: $width;
  height: $height;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -($height) / 2;
  margin-left: -($width) / 2;
}
.box-center {
  @include center(500px,300px);
}
//特别的参数“…”。当混合宏传的参数过多之时，可以使用参数来替代
@mixin box-shadow($shadows...){
  @if length($shadows) >= 1 {
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
  } @else {
    $shadows: 0 0 2px rgba(#000,.25);
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
  }
}
.box {
  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));
}

//扩展/继承通过关键词 “@extend”来继承已存在的类样式块，从而实现代码的继承。会合并代码a,b,c{}
.btn{
  border: 1px solid #ccc;
  padding: 6px 10px;
  font-size: 14px;
}
.btn-primary{
  background-color: #f36;
  color: #fff;
  @extend .btn;
}

//占位符 %placeholder（不会生成）会合并代码a,b,c{}
%mt5 {
  margin-top: 5px;
}
.btn {
  @extend %mt5;   //继承了才生成
}

//插值#{}


//函数。以@fuction开始
$baseFontSize:10px;
@function pxToRem($px){
  @return $px / $baseFontSize * 1rem;
}
body{
  font-size:$baseFontSize;
}


//@if判断
$lte7: true;
$type: monster;
.ib{
  display:inline-block;
  @if $lte7 {
    *display:inline;
    *zoom:1;
  }
}
p {
  @if $type == ocean {
    color: blue;
  } @else if $type == matador {
    color: red;
  } @else if $type == monster {
    color: green;
  } @else {
    color: black;
  }
}


//三目判断。语法为：if($condition, $if_true, $if_false) 。三个参数分别表示：条件，条件为真的值，条件为假的值。


//for循环。$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。
//1.@for $var from <start> through <end>
//2.@for $var from <start> to <end>
@for $i from 1 through 3{
  .item-#{$i} {width:2em * $i}
}
//@each循环。语法为：@each $var in <list or map>

